What is Node.js?
Node.js is an open source server environment
Node.js is free
Node.js runs on various platforms (Windows, Linux, Unix, Mac OS X, etc.)
Node.js uses JavaScript on the serverA common task for a web server can be to open a file on the server and return the content to the client.Here is how PHP or ASP handles a file request:Sends the task to the computer's file system.
Waits while the file system opens and reads the file.
Returns the content to the client.
Ready to handle the next request.
Here is how Node.js handles a file request:Sends the task to the computer's file system.
Ready to handle the next request.
When the file system has opened and read the file, the server returns the content to the client.
Node.js eliminates the waiting, and simply continues with the next request.Node.js runs single-threaded, non-blocking, asynchronous programming, which is very memory efficient.What Can Node.js Do?
Node.js can generate dynamic page content
Node.js can create, open, read, write, delete, and close files on the server
Node.js can collect form data
Node.js can add, delete, modify data in your database


What is a Node.js File?
Node.js files contain tasks that will be executed on certain events
A typical event is someone trying to access a port on the server
Node.js files must be initiated on the server before having any effect
Node.js files have extension ".js"What is a Module in Node.js?
Consider modules to be the same as JavaScript libraries.A set of functions you want to include in your application.Built-in Modules
Node.js has a set of built-in modules which you can use without any further installation.Look at our Built-in Modules Reference for a complete list of modules.
Include Modules
To include a module, use the require() function with the name of the module:var http = require('http');
Create Your Own Modules
You can create your own modules, and easily include them in your applications.The following example creates a module that returns a date and time object:Example
Create a module that returns the current date and time:exports.myDateTime = function () {
  return Date();
};
Node.js as a Web Server
The HTTP module can create an HTTP server that listens to server ports and gives a response back to the client.Use the createServer() method to create an HTTP server:Example
var http = require('http');//create a server object:
http.createServer(function (req, res) {
  res.write('Hello World!'); //write a response to the client
  res.end(); //end the response
}).listen(8080); //the server object listens on port 8080

